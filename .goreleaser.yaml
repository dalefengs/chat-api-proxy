# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    # - ppc64
    goarm:
      - "7"
    ignore:
      - goos: windows
        goarch: arm
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser -X main.treeState={{ .IsGitDirty }}


metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^test:"
      # - "^chore"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: ":arrow_up: Dependency updates" # 依赖更新
      regexp: '^.*?(deps|:arrow_up)\(deps\)!?:.+$'
      order: 300
    - title: ":sparkles: Features" # 新功能： 例如，新功能、新页面、新组件等
      regexp: '^.*?(feat|:sparkles)(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: ":art: Refactor" # 重构： 例如，重构代码、格式化代码、移动文件等
      regexp: '^.*?(refactor|:art)(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: ":lock: Security updates" # 安全更新： 例如，添加安全头、更新 .gitignore、更新 .gitattributes 等
      regexp: '^.*?(sec|:lock)(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: ":bug: Bug fixes" # 修复错误： 例如，修复 bug、修复拼写错误等
      regexp: '^.*?(fix|bug)(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: ":zap: Perf" # 优化相关，比如提升性能、体验。
      regexp: '^.*?(perf|:zap)(\([[:word:]]+\))??!?:.+$'
      order: 300
    - title: "Chore" # 杂务：通常用于描述其他不属于新功能、修复错误或重构代码的提交。 例如，更新文档、清理代码、更新依赖项、删除文件等
      regexp: '^.*?chore(\([[:word:]]+\))??!?:.+$'
      order: 300
    - title: ":memo: Documentation updates"
      regexp: ^.*?(doc|:memo)(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: ":lipstick: Style"
      regexp: ^.*?(style|:lipstick)(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: "Build process updates"
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999


archives:
  - name_template: >-
      {{- .ProjectName }}_
      {{- title .Os }}_ 
      {{- if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end -}}
    format_overrides:
      - goos: windows
        format: zip
    builds_info:
      group: root
      owner: root
    files:
      - README.md

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
